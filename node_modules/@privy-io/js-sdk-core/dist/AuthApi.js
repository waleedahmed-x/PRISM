import{Logout as r}from"@privy-io/public-api";import t from"./CustomProviderApi.js";import i from"./EmailApi.js";import s from"./FarcasterApi.js";import e from"./OAuthApi.js";import o from"./PasskeyApi.js";import n from"./PhoneApi.js";import a from"./SiweApi.js";import"./Error.js";import"./pkce.js";import"jose";class p{_privyInternal;customProvider;phone;email;oauth;siwe;passkey;farcaster;constructor(r,p,l){this._privyInternal=r,this.customProvider=new t(this._privyInternal),this.phone=new n(this._privyInternal),this.email=new i(this._privyInternal),this.oauth=new e(this._privyInternal,p,l),this.siwe=new a(this._privyInternal),this.passkey=new o(this._privyInternal),this.farcaster=new s(this._privyInternal)}async logout(){try{const t=await this._privyInternal.session.getRefreshToken()??void 0;await this._privyInternal.fetch(r,{body:{refresh_token:t}})}catch(r){console.warn("Error destroying session")}await Promise.all([this._privyInternal.session.destroyLocalState({reason:"logout"}),this._privyInternal.destroyClientAnalyticsId()]),this._privyInternal.callbacks?.setUser?.(null)}}export{p as default};
//# sourceMappingURL=AuthApi.js.map
