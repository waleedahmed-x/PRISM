import{PrivyClientError as e}from"../Error.js";class r{_walletProxy;_privyInternal;_publicKey;constructor({walletProxy:e,privyInternal:r,publicKey:t}){this._walletProxy=e,this._privyInternal=r,this._publicKey=t}async request(r){const t=await this._privyInternal.getAccessToken();if(!t)throw new e({error:"Missing access token",code:"attempted_rpc_call_before_logged_in"});return(await this._walletProxy.solanaRpc({accessToken:t,request:r,publicKey:this._publicKey})).response.data}}export{r as EmbeddedSolanaWalletProvider};
//# sourceMappingURL=EmbeddedSolanaWalletProvider.js.map
