import{parseUnits as e}from"@ethersproject/units";import t from"fetch-retry";import{polygon as o}from"../../chains/polygon.js";import{polygonAmoy as r}from"../../chains/polygonAmoy.js";import{polygonMumbai as a}from"../../chains/polygonMumbai.js";const i=t(fetch,{retries:3,retryDelay:500}),s=e=>[o.id,a.id,r.id].includes(e),n=t=>({maxPriorityFee:e(t.maxPriorityFee.toFixed(9),"gwei").toHexString(),maxFee:e(t.maxFee.toFixed(9),"gwei").toHexString()}),c=async e=>{let t="";switch(e){case o.id:t="https://gasstation.polygon.technology/v2";break;case a.id:t="https://gasstation-testnet.polygon.technology/v2";break;case r.id:t="https://gasstation.polygon.technology/amoy";break;default:throw Error(`chainId ${e} does not support polygon gas stations`)}const s=await i(t),c=await s.json();if(s.status>399)throw c;return{safeLow:n((d=c).safeLow),standard:n(d.standard),fast:n(d.fast)};var d};async function d(e){if(!s(e.chainId))throw new Error("Invalid chain ID for Polygon gas estimation.");if(void 0===e.type&&(e.type=2),e.maxPriorityFeePerGas&&e.maxFeePerGas)return e;try{const{standard:t}=await c(e.chainId);e.maxPriorityFeePerGas||(e.maxPriorityFeePerGas=t.maxPriorityFee),e.maxFeePerGas||(e.maxFeePerGas=t.maxFee),e.gasPrice&&(console.warn("`gasPrice` is not supported on this chain and will be ignored. Use `maxPriorityFeePerGas` and/or `maxFeePerGas` instead."),delete e.gasPrice)}catch(e){throw new Error(`Failed to set gas prices from Polygon gas station with error: ${e}.`)}return e}export{d as defaultGasForPolygon,c as getPolygonGasStationFees,s as isPolygon};
//# sourceMappingURL=polygon.js.map
