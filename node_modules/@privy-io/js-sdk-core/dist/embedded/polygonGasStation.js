import{parseUnits as i}from"@ethersproject/units";import{chainDefs as o}from"../chains/index.js";import"../chains/arbitrum.js";import"../chains/arbitrumGoerli.js";import"../chains/arbitrumSepolia.js";import"../chains/avalanche.js";import"../chains/avalancheFuji.js";import"../chains/base.js";import"../chains/baseGoerli.js";import"../chains/baseSepolia.js";import"../chains/berachainArtio.js";import"../chains/celo.js";import"../chains/celoAlfajores.js";import"../chains/filecoin.js";import"../chains/filecoinCalibration.js";import"../chains/garnetHolesky.js";import"../chains/goerli.js";import"../chains/holesky.js";import"../chains/linea.js";import"../chains/lineaTestnet.js";import"../chains/mainnet.js";import"../chains/optimism.js";import"../chains/optimismGoerli.js";import"../chains/optimismSepolia.js";import"../chains/polygon.js";import"../chains/polygonMumbai.js";import"../chains/redstone.js";import"../chains/redstoneHolesky.js";import"../chains/sepolia.js";import"../chains/zora.js";import"../chains/zoraSepolia.js";import"../chains/zoraTestnet.js";const s=[o.polygon.id,o.polygonMumbai.id],a=o=>({maxPriorityFee:i(o.maxPriorityFee.toFixed(9),"gwei").toHexString(),maxFee:i(o.maxFee.toFixed(9),"gwei").toHexString()}),t=async i=>{let s="";switch(i){case o.polygon.id:s="https://gasstation.polygon.technology/v2";break;case o.polygonMumbai.id:s="https://gasstation-testnet.polygon.technology/v2";break;default:throw Error(`chainId ${i} does not support polygon gas stations`)}const t=await fetch(s);return(i=>({safeLow:a(i.safeLow),standard:a(i.standard),fast:a(i.fast)}))(await t.json())};export{s as POLYGON_GAS_STATION_CHAIN_IDS,t as getPolygonGasStationFees};
//# sourceMappingURL=polygonGasStation.js.map
