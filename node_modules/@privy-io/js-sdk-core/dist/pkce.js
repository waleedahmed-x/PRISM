import{base64url as e}from"jose";const n="privy:state_code",t="privy:code_verifier";async function r(e,n){const t=(new TextEncoder).encode(e),r=await n("SHA-256",t);return new Uint8Array(r)}function o(e){return crypto.getRandomValues(new Uint8Array(e))}function c(){return e.encode(o(36))}function i(){return c()}async function u({codeVerifier:n,method:t="S256",digest:o=crypto.subtle.digest.bind(crypto.subtle)}){if("S256"==t){const t=await r(n,o);return e.encode(t)}return n}export{t as CODE_VERIFIER_KEY,n as STATE_CODE_KEY,c as createCodeVerifier,r as createHashBuffer,i as createStateCode,u as deriveCodeChallengeFromCodeVerifier,o as randomBytes};
//# sourceMappingURL=pkce.js.map
